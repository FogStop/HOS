{"remainingRequest":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Strive\\HOS\\HospitalVue\\src\\views\\DataExpore.vue?vue&type=style&index=0&id=465eaa29&scoped=true&lang=scss&","dependencies":[{"path":"E:\\Strive\\HOS\\HospitalVue\\src\\views\\DataExpore.vue","mtime":1741756329815},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1689001367870},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1689001369658},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\postcss-loader\\src\\index.js","mtime":1689001368637},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1689001367224},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1689001369023}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kYXRhLWRhc2hib2FyZCB7CiAgcGFkZGluZzogMjBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmN2ZhOwoKICAuY2hhcnQtcm93IHsKICAgIG1hcmdpbi1ib3R0b206IDIwcHg7CgogICAgJjpsYXN0LWNoaWxkIHsKICAgICAgbWFyZ2luLWJvdHRvbTogMDsKICAgIH0KICB9CgogIC5jaGFydC1jYXJkIHsKICAgIGJvcmRlci1yYWRpdXM6IDEycHg7CiAgICBib3gtc2hhZG93OiAwIDJweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4xKTsKICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzOwoKICAgICY6aG92ZXIgewogICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTVweCk7CiAgICB9CgogICAgOjp2LWRlZXAgLmVsLWNhcmRfX2JvZHkgewogICAgICBwYWRkaW5nOiAyMHB4OwogICAgfQogIH0KfQoKLy8g57uf5LiA5Zu+6KGo5qCH6aKY5qC35byPCgouZWNoYXJ0cy10aXRsZSB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMThweDsKICBjb2xvcjogIzMzMzsKICBtYXJnaW4tYm90dG9tOiAxNXB4OwogIGZvbnQtd2VpZ2h0OiA2MDA7Cn0K"},{"version":3,"sources":["DataExpore.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DataExpore.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <!-- 管理员-数据统计页面 -->\n  <div class=\"data-dashboard\">\n    <!-- 顶部两个大图表 -->\n    <el-row :gutter=\"20\" class=\"chart-row\">\n      <el-col :span=\"24\">\n        <el-card class=\"chart-card\">\n          <div id=\"orderPeople\" style=\"width: 100%; height: 400px;\"></div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"24\">\n        <el-card class=\"chart-card\">\n          <div id=\"orderSection\" style=\"width: 100%; height: 400px;\"></div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 底部两个并排图表 -->\n    <el-row :gutter=\"20\" class=\"chart-row\">\n      <el-col :span=\"12\">\n        <el-card class=\"chart-card\">\n          <div id=\"orderGender\" style=\"width: 100%; height: 400px;\"></div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"12\">\n        <el-card class=\"chart-card\">\n          <div id=\"patientAge\" style=\"width: 100%; height: 400px;\"></div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n.data-dashboard {\n  padding: 20px;\n  background-color: #f5f7fa;\n\n  .chart-row {\n    margin-bottom: 20px;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  .chart-card {\n    border-radius: 12px;\n    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\n    transition: transform 0.3s;\n\n    &:hover {\n      transform: translateY(-5px);\n    }\n\n    ::v-deep .el-card__body {\n      padding: 20px;\n    }\n  }\n}\n\n// 统一图表标题样式\n\n.echarts-title {\n  text-align: center;\n  font-size: 18px;\n  color: #333;\n  margin-bottom: 15px;\n  font-weight: 600;\n}\n</style>\n\n<script>\n// 在图表配置中统一添加标题样式\n\n// 示例（在orderGender方法中）：\nvar option = {\n  title: {\n    text: '患者性别比例',\n    left: 'center',\n    textStyle: {\n      fontSize: 16,\n      color: '#333'\n    }\n  },\n  // ...其他配置\n\n}\n</script>\n\n<script>\nimport request from \"@/utils/request.js\";\nexport default {\n  name: \"dataExpore\",\n  data() {\n    return {\n      sevenDate: [],\n      sevenOrder: [],\n    };\n  },\n  methods: {\n    //统计患者年龄分布\n    patientAge(){\n      var myChart = this.$echarts.init(document.getElementById(\"patientAge\"));\n      request.get(\"patient/patientAge\")\n      .then(res => {\n        var option = {\n           title: {\n        text: '患者年龄段分布',\n        left: 'center'\n    },\n    tooltip: {\n        trigger: 'item'\n    },\n    legend: {\n        top: '5%',\n        left: 'center'\n    },\n    series: [\n        {\n            name: '年龄段',\n            type: 'pie',\n            radius: ['40%', '70%'],\n            avoidLabelOverlap: false,\n            itemStyle: {\n                borderRadius: 10,\n                borderColor: '#fff',\n                borderWidth: 2\n            },\n            label: {\n                show: false,\n                position: 'center'\n            },\n            emphasis: {\n                label: {\n                    show: true,\n                    fontSize: '40',\n                    fontWeight: 'bold'\n                }\n            },\n            labelLine: {\n                show: false\n            },\n            data: [\n                {value: res.data.data[0], name: '0-9岁'},\n                {value: res.data.data[1], name: '10-19岁'},\n                {value: res.data.data[2], name: '20-29岁'},\n                {value: res.data.data[3], name: '30-39岁'},\n                {value: res.data.data[4], name: '40-49岁'},\n                {value: res.data.data[5], name: '50-59岁'},\n                {value: res.data.data[6], name: '60-69岁'},\n                {value: res.data.data[7], name: '70-79岁'},\n                {value: res.data.data[8], name: '80-89岁'},\n                {value: res.data.data[9], name: '90-99岁'},\n            ]\n        }\n    ]\n};\n\n\n\n// 使用刚指定的配置项和数据显示图表。\n          myChart.setOption(option);\n\n\n      })\n      .catch(err => {\n        console.error(err);\n      })\n    },\n    //统计挂号科室人数\n    orderSection(){\n      var myChart = this.$echarts.init(document.getElementById(\"orderSection\"));\n      request.get(\"order/orderSection\")\n      .then(res => {\n        console.log(res.data.data.map((item) => item.countSection));\n        console.log(res.data.data.map((item) => item.doctor.dSection))\n        var option = {\n             title: {\n        text: '挂号科室人数统计',\n        left: 'center'\n    },\n    xAxis: {\n        type: 'category',\n        data: res.data.data.map((item) => item.doctor.dSection),\n        axisLabel: {//解决各个不显示问题\n           interval:0,\n           rotate:10,\n           }\n\n    },\n    yAxis: {\n        type: 'value'\n    },\n    series: [{\n        data: res.data.data.map((item) => item.countSection),\n        type: 'bar',\n        showBackground: true,\n        backgroundStyle: {\n            color: 'rgba(180, 180, 180, 0.2)'\n        }\n    }]\n};\n// 使用刚指定的配置项和数据显示图表。\n          myChart.setOption(option);\n\n\n\n\n      })\n      .catch(err => {\n        console.error(err);\n      })\n    },\n    //挂号男女比例\n    orderGender(){\n      var myChart = this.$echarts.init(document.getElementById(\"orderGender\"));\n      request.get(\"order/orderGender\",)\n      .then(res => {\n      var option = {\n    title: {\n        text: '患者性别比例',\n        left: 'center'\n    },\n    tooltip: {\n        trigger: 'item'\n    },\n    legend: {\n        orient: 'vertical',\n        left: 'left',\n    },\n    series: [\n        {\n            name: '人数',\n            type: 'pie',\n            radius: '50%',\n            data: [\n                {value: res.data.data.map((item) => item.countGender)[0], name: res.data.data.map((item) => item.patient.pGender)[0]},\n                {value: res.data.data.map((item) => item.countGender)[1], name: res.data.data.map((item) => item.patient.pGender)[1]},\n\n            ],\n            emphasis: {\n                itemStyle: {\n                    shadowBlur: 10,\n                    shadowOffsetX: 0,\n                    shadowColor: 'rgba(0, 0, 0, 0.5)'\n                }\n            }\n        }\n    ]\n};\n          // 使用刚指定的配置项和数据显示图表。\n          myChart.setOption(option);\n\n      })\n      .catch(err => {\n        console.error(err);\n      });\n\n\n    },\n    //获取过去num天日期\n    pastSeven(num) {\n      var date = new Date();\n      date.setDate(date.getDate() - num);\n      var time = date.getMonth() + 1 + \"-\" + date.getDate();\n      return time;\n    },\n    //挂号人数图表\n    orderPeople() {\n      var myChart = this.$echarts.init(document.getElementById(\"orderPeople\"));\n      request\n        .get(\"order/orderSeven\")\n        .then((res) => {\n          if (res.data.status !== 200)\n            return this.$message.error(\"数据请求失败！\");\n          var option = {\n            title: {\n              text: \"近20天挂号人数折线图\",\n              left: \"5%\",\n            },\n            xAxis: {\n              type: \"category\",\n              data: this.sevenDate,\n            },\n            yAxis: {\n              type: \"value\",\n            },\n            series: [\n              {\n                data: res.data.data,\n                type: \"line\",\n              },\n            ],\n          };\n          // 使用刚指定的配置项和数据显示图表。\n          myChart.setOption(option);\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    },\n  },\n  mounted() {\n    this.orderPeople();\n    this.orderGender();\n    this.orderSection();\n    this.patientAge();\n  },\n  created() {\n    //获取过去7天日期\n    for (var i = 20; i > 0; i--) {\n      this.sevenDate.push(this.pastSeven(i));\n    }\n  },\n};\n</script>\n\n"]}]}