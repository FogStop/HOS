{"remainingRequest":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Strive\\HOS\\HospitalVue\\src\\views\\DoctorList.vue?vue&type=template&id=c0be6cd2&scoped=true&","dependencies":[{"path":"E:\\Strive\\HOS\\HospitalVue\\src\\views\\DoctorList.vue","mtime":1741674227713},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1689001369726},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1689001369023}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}