{"remainingRequest":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Strive\\HOS\\HospitalVue\\src\\views\\Login.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"E:\\Strive\\HOS\\HospitalVue\\src\\views\\Login.vue","mtime":1741674607024},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1689001367870},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1689001369658},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\postcss-loader\\src\\index.js","mtime":1689001368637},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1689001367224},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1689001369023}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubG9naW4td3JhcCB7CiAgaGVpZ2h0OiAxMDB2aDsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYmFja2dyb3VuZC1pbWFnZTogIHVybCgnLi4vYXNzZXRzL2ltZy9sb2dpbi1iZy5wbmcnKTsKICBib2Rlci1yYWRpdXM6IDE1cHg7CiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsvL+WbvueJh+Wkp+Wwjwp9CgoubG9naW4tY29udGFpbmVyIHsKICBkaXNwbGF5OiBmbGV4OwogIHdpZHRoOjU1JTsKICBoZWlnaHQ6IDYwJTsKICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7CiAgYm9yZGVyLXJhZGl1czogMTVweDsKICBib3gtc2hhZG93OiAwIDhweCAyMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTsvL+mYtOW9sQogIG1hcmdpbi1sZWZ0OiA2MDBweDsKfQoKLmxvZ2luLWltYWdlIHsKICBmbGV4OiAxOwogIHBhZGRpbmc6IDMwcHg7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTsKICBib3JkZXItcmFkaXVzOiAxNXB4OwoKICAubG9naW4taW1nIHsKICAgIHdpZHRoOiAxMzAlOwogICAgaGVpZ2h0OiBhdXRvOwogIH0KfQoKLmxvZ2luLWZvcm0gewogIGZsZXg6IDE7CiAgcGFkZGluZzogNDBweCA1MHB4OwoKICAubG9naW4tdGl0bGUgewogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgY29sb3I6ICMzMzM7CiAgICBtYXJnaW4tYm90dG9tOiAzMHB4OwogICAgZm9udC1zaXplOiAyNHB4OwogICAgbGV0dGVyLXNwYWNpbmc6IDJweDsKICB9Cn0KCi5jYXB0Y2hhLWNvbnRhaW5lciB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGdhcDogMTBweDsKCiAgLmNhcHRjaGEtaW1nIHsKICAgIGZsZXg6IDE7CiAgICBoZWlnaHQ6IDQwcHg7CiAgICBiYWNrZ3JvdW5kOiAjZjBmMmY1OwogICAgYm9yZGVyLXJhZGl1czogNHB4OwogICAgZGlzcGxheTogZmxleDsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgIGZvbnQtc2l6ZTogMjBweDsKICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgY29sb3I6ICMzMzM7CiAgICBsZXR0ZXItc3BhY2luZzogNXB4OwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7CgogICAgJjpob3ZlciB7CiAgICAgIGJhY2tncm91bmQ6ICNlNmU5ZWQ7CiAgICB9CiAgfQp9CgoubG9naW4tYnRuIHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDQ1cHg7CiAgZm9udC1zaXplOiAxNnB4OwogIGxldHRlci1zcGFjaW5nOiAycHg7Cn0KCi5yb2xlLWdyb3VwIHsKICA6OnYtZGVlcCAuZWwtcmFkaW8tYnV0dG9uIHsKICAgIG1hcmdpbjogMCA1cHg7CgogICAgJl9faW5uZXIgewogICAgICBwYWRkaW5nOiAxMHB4IDE1cHg7CiAgICB9CiAgfQp9CgoubG9naW4tZm9vdGVyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luLXRvcDogMTVweDsKCiAgLnJlZ2lzdGVyLWxpbmsgewogICAgY29sb3I6ICMwZjk4NzY7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzOwoKICAgICY6aG92ZXIgewogICAgICBjb2xvcjogIzBkODI2OTsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappingsgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<!--  登录页面  -->\n  <div class=\"login-wrap\">\n    <div class=\"login-container\">\n      <div class=\"login-image\">\n        <img src=\"@/assets/17.png\" alt=\"医疗平台\" class=\"login-img\">\n      </div>\n      <div class=\"login-form\">\n        <el-form :model=\"loginForm\" :rules=\"loginRules\" ref=\"ruleForm\">\n          <h2 class=\"login-title\">智慧医疗信息平台</h2>\n\n          <!-- 用户名输入 -->\n          <el-form-item prop=\"id\">\n            <el-input v-model=\"loginForm.id\" placeholder=\"请输入账号\">\n              <i slot=\"prefix\" class=\"el-icon-user\"></i>\n            </el-input>\n          </el-form-item>\n\n          <!-- 密码输入 -->\n          <el-form-item prop=\"password\">\n            <el-input\n              v-model=\"loginForm.password\"\n              type=\"password\"\n              placeholder=\"请输入密码\"\n              show-password>\n              <i slot=\"prefix\" class=\"el-icon-lock\"></i>\n            </el-input>\n          </el-form-item>\n\n          <!-- 新增验证码 -->\n          <el-form-item prop=\"captcha\">\n            <div class=\"captcha-container\">\n              <el-input\n                v-model=\"loginForm.captcha\"\n                placeholder=\"请输入验证码\"\n                style=\"width: 60%\">\n                <i slot=\"prefix\" class=\"el-icon-key\"></i>\n              </el-input>\n              <div class=\"captcha-img\" @click=\"refreshCaptcha\">\n                {{ generatedCaptcha }}\n              </div>\n            </div>\n          </el-form-item>\n\n          <!-- 角色选择 -->\n          <el-form-item class=\"role-group\">\n            <el-radio-group v-model=\"role\" size=\"small\">\n              <el-radio-button label=\"患者\"></el-radio-button>\n              <el-radio-button label=\"医生\"></el-radio-button>\n              <el-radio-button label=\"管理员\"></el-radio-button>\n            </el-radio-group>\n          </el-form-item>\n\n          <!-- 登录按钮 -->\n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              class=\"login-btn\"\n              @click=\"submitLoginForm('ruleForm')\">\n              登 录\n            </el-button>\n          </el-form-item>\n\n          <div class=\"login-footer\">\n            <span class=\"register-link\" @click=\"registerFormVisible = true\">\n              没有账号？立即注册\n            </span>\n          </div>\n        </el-form>\n      </div>\n    </div>\n    <!-- 注册对话框 -->\n    <el-dialog title=\"患者注册\" :visible.sync=\"registerFormVisible\">\n      <el-form\n        class=\"findPassword\"\n        :model=\"registerForm\"\n        :rules=\"registerRules\"\n        ref=\"registerForm\"\n      >\n        <el-form-item label=\"账号\" label-width=\"80px\" prop=\"pId\">\n          <el-input v-model.number=\"registerForm.pId\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"性别\" label-width=\"80px\">\n          <el-radio v-model=\"registerForm.pGender\" label=\"男\">男</el-radio>\n          <el-radio v-model=\"registerForm.pGender\" label=\"女\">女</el-radio>\n        </el-form-item>\n        <el-form-item label=\"密码\" label-width=\"80px\" prop=\"pPassword\">\n          <el-input v-model=\"registerForm.pPassword\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"姓名\" label-width=\"80px\" prop=\"pName\">\n          <el-input v-model=\"registerForm.pName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"出生日期\" label-width=\"80px\" prop=\"pBirthday\">\n          <el-date-picker\n            v-model=\"registerForm.pBirthday\"\n            type=\"date\"\n            placeholder=\"选择日期\"\n            value-format=\"yyyy-MM-dd\">\n          </el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"手机号\" label-width=\"80px\" prop=\"pPhone\">\n          <el-input v-model=\"registerForm.pPhone\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱号\" label-width=\"80px\" prop=\"pEmail\">\n          <el-input v-model=\"registerForm.pEmail\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"身份证号\" label-width=\"80px\" prop=\"pCard\">\n          <el-input v-model=\"registerForm.pCard\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"registerFormVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"registerClick('registerForm')\"\n        >确 定\n        </el-button\n        >\n      </div>\n    </el-dialog>\n\n  </div>\n\n</template>\n\n<script>\nimport request from \"@/utils/request.js\";\nimport { setToken } from \"@/utils/storage.js\";\n\nexport default {\n  name: \"Login\",\n  data() {\n    // 生成随机验证码\n    const generateCaptcha = () => {\n      const chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678';\n      let captcha = '';\n      for(let i = 0; i < 4; i++) {\n        captcha += chars.charAt(Math.floor(Math.random() * chars.length));\n      }\n      return captcha;\n    };\n\n    // 验证码校验规则\n    const validateCaptcha = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入验证码'));\n      } else if (value.toLowerCase() !== this.generatedCaptcha.toLowerCase()) {\n        callback(new Error('验证码不正确'));\n      } else {\n        callback();\n      }\n    };\n\n    var validateMoblie = (rule, value, callback) => {\n      if (value === undefined) {\n        callback(new Error(\"请输入手机号\"));\n      } else {\n        let reg = /^1(3[0-9]|4[5,7]|5[0,1,2,3,5,6,7,8,9]|6[2,5,6,7]|7[0,1,7,8]|8[0-9]|9[1,8,9])\\d{8}$/;\n        if (!reg.test(value)) {\n          callback(new Error(\"请输入合法的手机号\"));\n        }\n        callback();\n      }\n    };\n    var validateCard = (rule, value, callback) => {\n      if (value === undefined) {\n        callback(new Error(\"请输入身份证号\"));\n      } else {\n        let reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\n        if (!reg.test(value)) {\n          callback(new Error(\"请输入合法的身份证号码\"));\n        }\n        callback();\n      }\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请输入密码\"));\n      } else {\n        if (this.findForm.checkPassword !== \"\") {\n          this.$refs.findForm.validateField(\"checkPassword\");\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请再次输入密码\"));\n      } else if (value !== this.findForm.newPassword) {\n        callback(new Error(\"两次输入密码不一致!\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      // 生成初始验证码\n      generatedCaptcha: generateCaptcha(),\n      //背景图片\n      backgroundDiv: {\n        backgroundImage: \"url(\" + require(\"../assets/doctor.jpg\") + \")\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"100% 100%\"\n      },\n      loginForm: {\n        id: \"202501\",\n        password: \"admin\",\n        captcha: \"\"\n      },\n      loginRules: {\n        id: [\n          { required: true, message: \"请输入账号编号\", trigger: \"blur\" },\n          { min: 3, max: 50, message: \"长度在 3到 50 个字符\", trigger: \"blur\" }\n        ],\n        password: [{ required: true, message: \"请输入密码\", trigger: \"blur\" }],\n        captcha: [\n          { validator: validateCaptcha, trigger: \"blur\" }]\n      },\n      role: \"患者\",\n      findRole: \"患者\",\n      //找回密码\n      findFormVisible: false,\n      findForm: {\n        code: \"\",\n        newPassword: \"\",\n        checkPassword: \"\",\n        pEmail: \"\"\n      },\n\n      findRules: {\n        pEmail: [\n          { required: true, message: \"请输入邮箱地址\", trigger: \"blur\" },\n          {\n            type: \"email\",\n            message: \"请输入正确的邮箱地址\",\n            trigger: [\"blur\", \"change\"]\n          }\n        ],\n        code: [{ required: true, message: \"请输入验证码\", trigger: \"blur\" }],\n        newPassword: [{ validator: validatePass, trigger: \"blur\" }],\n        checkPassword: [{ validator: validatePass2, trigger: \"blur\" }]\n      },\n      totalTime: 60,\n      content: \"发送验证码\",\n      canClick: true,\n      //注册\n      registerFormVisible: false,\n      registerForm: {\n        pGender: \"男\"\n      },\n      registerRules: {\n        pId: [\n          { required: true, message: \"请输入账号\", trigger: \"blur\" },\n          { type: \"number\", message: \"账号必须数字类型\", trigger: \"blur\" }\n        ],\n        pPassword: [\n          { required: true, message: \"请输入密码\", trigger: \"blur\" },\n          { min: 4, max: 50, message: \"长度在 4到 50 个字符\", trigger: \"blur\" }\n        ],\n        pName: [\n          { required: true, message: \"请输入姓名\", trigger: \"blur\" },\n          { min: 2, max: 8, message: \"长度在 2到 8 个字符\", trigger: \"blur\" }\n        ],\n        pEmail: [\n          { required: true, message: \"请输入邮箱\", trigger: \"blur\" },\n          {\n            type: \"email\",\n            message: \"请输入正确的邮箱地址\",\n            trigger: [\"blur\", \"change\"]\n          }\n        ],\n        pPhone: [{ validator: validateMoblie }],\n        pCard: [{ validator: validateCard }],\n        pBirthday: [\n          { required: true, message: \"选择出生日期\", trigger: \"blur\" }\n        ]\n      }\n    };\n  },\n  methods: {\n    // 刷新验证码\n    refreshCaptcha() {\n      this.generatedCaptcha = this.generateCaptcha();\n    },\n\n    // 生成验证码方法\n    generateCaptcha() {\n      const chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678';\n      let captcha = '';\n      for(let i = 0; i < 4; i++) {\n        captcha += chars.charAt(Math.floor(Math.random() * chars.length));\n      }\n      return captcha;\n    },\n\n    //点击注册确认按钮\n    registerClick(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          request\n            .get(\"patient/addPatient\", {\n              params: {\n                pId: this.registerForm.pId,\n                pName: this.registerForm.pName,\n                pPassword: this.registerForm.pPassword,\n                pGender: this.registerForm.pGender,\n                pEmail: this.registerForm.pEmail,\n                pPhone: this.registerForm.pPhone,\n                pCard: this.registerForm.pCard,\n                pBirthday: this.registerForm.pBirthday\n              }\n            })\n            .then(res => {\n              if (res.data.status !== 200)\n                return this.$message.error(\"账号或邮箱已被占用！\");\n              this.registerFormVisible = false;\n              this.$message.success(\"注册成功！\");\n              console.log(res);\n            });\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    // 点击找回密码确认按钮\n    findPassword(findForm) {\n      this.$refs[findForm].validate(valid => {\n        if (valid) {\n          //如果是选中患者\n          if (this.findRole === \"患者\") {\n            request\n              .get(\"patient/findPassword\", {\n                params: {\n                  pEmail: this.findForm.pEmail,\n                  pPassword: this.findForm.newPassword,\n                  code: this.findForm.code\n                }\n              })\n              .then(res => {\n                if (res.data.status !== 200)\n                  return this.$message.error(\"验证码错误或者已过期！！！\");\n                this.$message.success(\"密码修改成功！！请登录\");\n                this.findFormVisible = false;\n              });\n          }\n          //如果是选中管理员\n          if (this.findRole === \"管理员\") {\n            request\n              .get(\"admin/findPassword\", {\n                params: {\n                  aEmail: this.findForm.pEmail,\n                  aPassword: this.findForm.newPassword,\n                  code: this.findForm.code\n                }\n              })\n              .then(res => {\n                if (res.data.status !== 200)\n                  return this.$message.error(\"验证码错误或者已过期！！！\");\n                this.$message.success(\"密码修改成功！！请登录\");\n                this.findFormVisible = false;\n              });\n          }\n          //如果是选中患者\n          if (this.findRole === \"医生\") {\n            request\n              .get(\"doctor/findPassword\", {\n                params: {\n                  dEmail: this.findForm.pEmail,\n                  dPassword: this.findForm.newPassword,\n                  code: this.findForm.code\n                }\n              })\n              .then(res => {\n                if (res.data.status !== 200)\n                  return this.$message.error(\"验证码错误或者已过期！！！\");\n                this.$message.success(\"密码修改成功！！请登录\");\n                this.findFormVisible = false;\n              });\n          }\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    //点击发送验证码按钮\n    sendEmail() {\n      //倒计时\n      if (!this.canClick) return; //改动的是这两行代码\n      this.canClick = false;\n      this.content = this.totalTime + \"s后重新发送\";\n      let clock = window.setInterval(() => {\n        this.totalTime--;\n        this.content = this.totalTime + \"s后重新发送\";\n        if (this.totalTime < 0) {\n          window.clearInterval(clock);\n          this.content = \"重新发送验证码\";\n          this.totalTime = 10;\n          this.canClick = true; //这里重新开启\n        }\n      }, 1000);\n\n      //如果是选中患者\n      if (this.findRole === \"患者\") {\n        request\n          .get(\"patient/sendEmail\", {\n            params: {\n              pEmail: this.findForm.pEmail\n            }\n          })\n          .then(res => {\n            console.log(this.findForm.pEmail);\n            console.log(res);\n            if (res.data.status !== 200)\n              return this.$message.error(\"该邮箱暂未注册！请先注册！\");\n            this.$message.success(\"验证码发送成功！\");\n          });\n      }\n      //如果是选中管理员\n      if (this.findRole === \"管理员\") {\n        request\n          .get(\"admin/sendEmail\", {\n            params: {\n              aEmail: this.findForm.pEmail\n            }\n          })\n          .then(res => {\n            console.log(this.findForm.pEmail);\n            console.log(res);\n            if (res.data.status !== 200)\n              return this.$message.error(\"该邮箱暂未注册！请先注册！\");\n            this.$message.success(\"验证码发送成功！\");\n          });\n      }\n      //如果是选中医生\n      if (this.findRole === \"医生\") {\n        request\n          .get(\"doctor/sendEmail\", {\n            params: {\n              dEmail: this.findForm.pEmail\n            }\n          })\n          .then(res => {\n            console.log(this.findForm.pEmail);\n            console.log(res);\n            if (res.data.status !== 200)\n              return this.$message.error(\"该邮箱暂未注册！请先注册！\");\n            this.$message.success(\"验证码发送成功！\");\n          });\n      }\n    },\n    //提交表单\n    submitLoginForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          if (this.role === \"管理员\") {\n            var params = new URLSearchParams();\n            params.append(\"aId\", this.loginForm.id);\n            params.append(\"aPassword\", this.loginForm.password);\n\n            request\n              .post(\"admin/login\", params)\n              .then(res => {\n                console.log(res);\n                if (res.data.status != 200)\n                  return this.$message.error(\"用户名或密码错误\");\n                setToken(res.data.data.token);\n                this.$router.push(\"/adminLayout\");\n              })\n              .catch(err => {\n                this.$message.error(\"用户名或密码错误\");\n                console.error(err);\n              });\n          }\n          if (this.role === \"医生\") {\n            var params1 = new URLSearchParams();\n            params1.append(\"dId\", this.loginForm.id);\n            params1.append(\"dPassword\", this.loginForm.password);\n\n            request\n              .post(\"doctor/login\", params1)\n              .then(res => {\n                console.log(res);\n                if (res.data.status != 200)\n                  return this.$message.error(\"用户名或密码错误\");\n                setToken(res.data.data.token);\n                this.$router.push(\"/doctorLayout\");\n              })\n              .catch(err => {\n                this.$message.error(\"用户名或密码错误\");\n                console.error(err);\n              });\n          }\n          if (this.role === \"患者\") {\n            var params2 = new URLSearchParams();\n            params2.append(\"pId\", this.loginForm.id);\n            params2.append(\"pPassword\", this.loginForm.password);\n\n            request\n              .post(\"patient/login\", params2)\n              .then(res => {\n                console.log(res);\n                if (res.data.status != 200)\n                  return this.$message.error(\"用户名或密码错误\");\n                setToken(res.data.data.token);\n                this.$router.push(\"/patientLayout\");\n              })\n              .catch(err => {\n                this.$message.error(\"用户名或密码错误\");\n                console.error(err);\n              });\n          }\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    }\n  },\n  mounted() {\n    this.refreshCaptcha();\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.login-wrap {\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-image:  url('../assets/img/login-bg.png');\n  boder-radius: 15px;\n  background-size: cover;//图片大小\n}\n\n.login-container {\n  display: flex;\n  width:55%;\n  height: 60%;\n  background: rgba(255, 255, 255, 0.3);\n  border-radius: 15px;\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);//阴影\n  margin-left: 600px;\n}\n\n.login-image {\n  flex: 1;\n  padding: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(255, 255, 255, 0.3);\n  border-radius: 15px;\n\n  .login-img {\n    width: 130%;\n    height: auto;\n  }\n}\n\n.login-form {\n  flex: 1;\n  padding: 40px 50px;\n\n  .login-title {\n    text-align: center;\n    color: #333;\n    margin-bottom: 30px;\n    font-size: 24px;\n    letter-spacing: 2px;\n  }\n}\n\n.captcha-container {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n\n  .captcha-img {\n    flex: 1;\n    height: 40px;\n    background: #f0f2f5;\n    border-radius: 4px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 20px;\n    font-weight: bold;\n    color: #333;\n    letter-spacing: 5px;\n    cursor: pointer;\n    transition: all 0.3s;\n\n    &:hover {\n      background: #e6e9ed;\n    }\n  }\n}\n\n.login-btn {\n  width: 100%;\n  height: 45px;\n  font-size: 16px;\n  letter-spacing: 2px;\n}\n\n.role-group {\n  ::v-deep .el-radio-button {\n    margin: 0 5px;\n\n    &__inner {\n      padding: 10px 15px;\n    }\n  }\n}\n\n.login-footer {\n  text-align: center;\n  margin-top: 15px;\n\n  .register-link {\n    color: #0f9876;\n    cursor: pointer;\n    transition: color 0.3s;\n\n    &:hover {\n      color: #0d8269;\n    }\n  }\n}\n</style>\n"]}]}