{"remainingRequest":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Strive\\HOS\\HospitalVue\\src\\views\\SectionMessage.vue?vue&type=style&index=0&id=e64265c8&scoped=true&lang=scss&","dependencies":[{"path":"E:\\Strive\\HOS\\HospitalVue\\src\\views\\SectionMessage.vue","mtime":1741755251803},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1689001367870},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1689001369658},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\postcss-loader\\src\\index.js","mtime":1689001368637},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1689001367224},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"E:\\Strive\\HOS\\HospitalVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1689001369023}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5kYXRlVWwgewogIG1hcmdpbjogMjBweCAwOwp9Ci5kYXRlVWwgbGkgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBtYXJnaW46IDVweDsKfQouYXBwb2ludG1lbnQtY2FyZCB7CiAgbWFyZ2luLXRvcDogMjBweDsKICBwYWRkaW5nOiAyMHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7CiAgYm9yZGVyLXJhZGl1czogOHB4Owp9Ci5kb2N0b3ItbGlzdC1oZWFkZXIgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBtYXJnaW4tYm90dG9tOiAxMHB4Owp9Ci5pY29uZm9udCB7CiAgbWFyZ2luLXJpZ2h0OiA4cHg7Cn0KLmRhdGUtYnV0dG9uIHsKICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7Cn0KLmRhdGUtYnV0dG9uOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzA0NzVlOyAvKiBEYXJrZXIgcHJpbWFyeSBjb2xvciAqLwp9Ci5kaWFsb2ctZm9vdGVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7Cn0KLmNhbmNlbC1idXR0b24gewogIG1hcmdpbi1yaWdodDogMTBweDsKICBmb250LXNpemU6IDE4cHg7Cn0KLmNvbmZpcm0tYnV0dG9uIHsKICBmb250LXNpemU6IDE4cHg7Cn0KLmVsLWJyZWFkY3J1bWJ7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQo="},{"version":3,"sources":["SectionMessage.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SectionMessage.vue","sourceRoot":"src/views","sourcesContent":["<style scoped lang=\"scss\">\n.dateUl {\n  margin: 20px 0;\n}\n.dateUl li {\n  display: inline-block;\n  margin: 5px;\n}\n.appointment-card {\n  margin-top: 20px;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n}\n.doctor-list-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n.iconfont {\n  margin-right: 8px;\n}\n.date-button {\n  transition: background-color 0.3s;\n}\n.date-button:hover {\n  background-color: #30475e; /* Darker primary color */\n}\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n}\n.cancel-button {\n  margin-right: 10px;\n  font-size: 18px;\n}\n.confirm-button {\n  font-size: 18px;\n}\n.el-breadcrumb{\n  margin-bottom: 20px;\n}\n</style>\n\n<script>\nimport jwtDecode from \"jwt-decode\";\nimport request from \"@/utils/request.js\";\nimport { getToken } from \"@/utils/storage.js\";\nexport default {\n  name: \"sectionMessage\",\n  data() {\n    return {\n      sectionOpt: this.$route.query.sectionOpt,\n      sectionData: [],\n      monthDays: [],\n      clickTag: false,\n      orderFormVisible: false,\n      orderForm: { orderDate: \"\" },\n      times: [],\n      orderRules: {\n        oTime: [\n          { required: true, message: \"选择时间段\", trigger: \"blur\" },\n        ],\n      },\n      //挂号日期\n      orderDate: \"\",\n      //拼接时间和日期成为oId\n      idTime: \"\",\n    };\n  },\n  methods: {\n    //打开挂号对话框触发,获取挂号时间段已剩余票数\n    requestTime(id) {\n      this.idTime = id + this.orderDate;\n      request\n        .get(\"order/findOrderTime\", {\n          params: {\n            arId: this.idTime,\n          },\n        })\n        .then((res) => {\n          const date = new Date(this.orderDate);\n          const today = new Date();\n          const isToday =\n            date.getFullYear() === today.getFullYear() &&\n            date.getMonth() === today.getMonth() &&\n            date.getDate() === today.getDate();\n          var array = [];\n          if (!this.isTimeAfterTarget(\"09:30\") || !isToday) {\n            array.push(\n              \"08:30-09:30  \" + \"   余号 \" + res.data.data.eTOn\n            );\n          }\n          if (!this.isTimeAfterTarget(\"10:30\") || !isToday) {\n            array.push(\n              \"09:30-10:30  \" + \"   余号 \" + res.data.data.nTOt\n            );\n          }\n          if (!this.isTimeAfterTarget(\"11:30\") || !isToday) {\n            array.push(\n              \"10:30-11:30  \" + \"   余号 \" + res.data.data.tTOe\n            );\n          }\n          if (!this.isTimeAfterTarget(\"15:30\") || !isToday) {\n            array.push(\n              \"14:30-15:30  \" + \"   余号 \" + res.data.data.fTOf\n            );\n          }\n          if (!this.isTimeAfterTarget(\"16:30\") || !isToday) {\n            array.push(\n              \"15:30-16:30  \" + \"   余号 \" + res.data.data.fTOs\n            );\n          }\n          if (!this.isTimeAfterTarget(\"17:30\") || !isToday) {\n            array.push(\n              \"16:30-17:30  \" + \"   余号 \" + res.data.data.sTOs\n            );\n          }\n          this.times = array;\n        });\n    },\n    isTimeAfterTarget(timeString) {\n      // 判断时间是否超过timeString(入参格式如：09:30)\n      const currentTime = new Date();\n\n      // 解析传入的目标时间字符串，获取小时和分钟\n      const [targetHour, targetMinute] = timeString.split(\":\");\n\n      // 设置要比较的时间\n      const targetTime = new Date();\n      targetTime.setHours(targetHour);\n      targetTime.setMinutes(targetMinute);\n      targetTime.setSeconds(0);\n\n      // 比较当前时间是否超过了目标时间\n      return currentTime > targetTime;\n    },\n    //挂号点击确认\n    orderSuccess(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          request\n            .get(\"patient/addOrder\", {\n              params: {\n                pId: this.orderForm.pId,\n                dId: this.orderForm.dId,\n                oStart:\n                  this.orderForm.orderDate +\n                  \" \" +\n                  this.orderForm.oTime,\n                arId: this.idTime,\n              },\n            })\n            .then((res) => {\n              if (res.data.status != 200)\n                return this.$message.error(\n                  \"该时间段无剩余号源！请重新选择！\"\n                );\n              this.orderFormVisible = false;\n              this.$message.success(\"挂号成功！\");\n              this.orderForm.oTime = '';\n            });\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    //token解码\n    tokenDecode(token) {\n      if (token !== null) return jwtDecode(token);\n    },\n    //打开挂号对话框\n    openClick(id, name) {\n      this.orderForm.dId = id;\n      this.orderForm.dName = name;\n      this.orderFormVisible = true;\n      //请求挂号时间段\n      this.requestTime(id);\n    },\n    //选择日期触发时间\n    dateClick(date) {\n      //获取挂号年月日\n      const nowDate = new Date();\n      let year = nowDate.getFullYear();\n      this.orderForm.orderDate = year + \"-\" + date;\n      let dateYear = year + \"-\" + date;\n      this.orderDate = dateYear;\n      request\n        .get(\"/arrange/findByTime\", {\n          params: {\n            arTime: dateYear,\n            dSection: this.sectionOpt,\n          },\n        })\n        .then((res) => {\n          //this.sectionData.dId = res.data.data.doctors.dId;\n          /**\n           * 重点！！！把数组中的对象取出来用map\n           */\n          this.sectionData = res.data.data.map((item) => item.doctor);\n          this.clickTag = true;\n          console.log(res.data.data.map((item) => item.doctor));\n          //console.log(res.data.data[0].doctor);\n        });\n    },\n    //获取当天及后7天的日期星期\n    nowDay(num) {\n      var nowDate = new Date();\n      var currentHour = nowDate.getHours();\n      var currentMinute = nowDate.getMinutes();\n\n      // 判断当前时间是否已经过了17:30\n      if (\n        currentHour > 17 ||\n        (currentHour === 17 && currentMinute > 30)\n      ) {\n        num++; // 次日\n      }\n\n      nowDate.setDate(nowDate.getDate() + num);\n      var month = nowDate.getMonth() + 1;\n      var date = nowDate.getDate();\n      if (date < 10) {\n        date = \"0\" + date;\n      }\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n      var time = month + \"-\" + date;\n      this.monthDays.push(time);\n    },\n    //请求部门医生信息\n    requestSection() {\n      request\n        .get(\"patient/findDoctorBySection\", {\n          params: {\n            dSection: this.$route.query.sectionOpt,\n          },\n        })\n        .then((res) => {\n          if (res.data.status !== 200)\n            return this.$message.error(\"请求数据失败\");\n          this.sectionData = res.data.data.doctors;\n          console.log(res.data.data.doctors);\n        });\n    },\n  },\n  created() {\n    //获取当天的后7天\n    for (var i = 0; i < 7; i++) {\n      this.nowDay(i);\n    }\n    //按科室请求医生信息\n    this.requestSection();\n    // 解码token\n    this.orderForm.pName = this.tokenDecode(getToken()).pName;\n    this.orderForm.pCard = this.tokenDecode(getToken()).pCard;\n    this.orderForm.pId = this.tokenDecode(getToken()).pId;\n    //console.log(this.orderForm.pId)\n  },\n};\n</script>"]}]}